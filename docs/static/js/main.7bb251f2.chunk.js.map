{"version":3,"sources":["assets/logo/TEDxHanyangU2.png","assets/logo/TEDxHanyangU4.png","assets/logo/TEDxHanyangU8.png","serviceWorker.js","store/constant.js","store/action.js","components/common/Header.js","components/common/Footer.js","components/common/LeftMenu.js","components/common/Container.js","components/Home/TedxCard.js","router.js","views/Home.js","views/About.js","store/state.js","store/index.js","store/reducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","toggleDrawer","bol","type","Constant","payload","connect","state","menuSwitch","withRouter","props","dispatch","useDispatch","history","id","Button","className","onClick","pathname","push","src","logo2","alt","MenuOpen","Menu","Footer","MenuList","key","name","path","cur_page","goPage","event","currentTarget","getAttribute","Drawer","anchor","open","onClose","List","ListItem","logo4","Divider","style","marginTop","map","menu","button","ListItemText","disableTypography","primary","Container","children","useEffect","LinkedIn","Instagram","TEDxHanyangU8","routes","component","TedxCard","store","applyMiddleware","promiseMiddleware","reduxThunk","createStore","createStoreWithMiddleware","initialState","action","Object","assign","App","createBrowserHistory","r","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7bb251f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU2.272df90a.png\";","module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU4.adcef4d2.png\";","module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU8.5ed35f25.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    //  ============== 0. Common ==============  //\n    SET_CUR_PAGE: \"SET_CUR_PAGE\",\n    TOGGLE_DRAWER: \"TOGGLE_DRAWER\"\n    //  ============== 1. Home ==============  //\n};\n","import Constant from \"./constant\"\n\nexport function setCurPage(key) {\n    return {\n        type: Constant.SET_CUR_PAGE,\n        payload: key,\n    };\n}\n\nexport function toggleDrawer(bol) {\n    return {\n        type: Constant.TOGGLE_DRAWER,\n        payload: bol,\n    };\n}","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {Button} from '@material-ui/core';\nimport {Menu, MenuOpen} from '@material-ui/icons';\n\nimport logo2 from \"@logo/TEDxHanyangU2.png\"\n\nconst Header = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history } = props;\n\n    const goHome = () => {\n        if (history.location.pathname !== \"/\" ){\n            history.push('/')\n        }\n    }\n\n    const openDrawer = () => {\n        dispatch(toggleDrawer(true))\n    };\n\n    return (\n        <div id=\"header\">\n            <Button className=\"logoWarp\" onClick={goHome}>\n                <img src={logo2} alt=\"logo-img\"></img>\n            </Button>\n            <Button onClick={openDrawer}>\n                {menuSwitch\n                ?<MenuOpen />\n                :<Menu/>\n                }\n            </Button>\n        </div>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(Header));\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <div id=\"footer\">\n            <div className=\"content\">\n                <span>18회 디렉터: 정다윤</span>\n                <span>주소: 서울특별시 성동구 왕십리로 222 (사근동,한양대학교) 스마트교수학습센터 TEDxHanyangU</span>\n            </div>\n            <div className=\"content\">\n                <span>Copyright © TEDxHanyangU. All Rights Reserved.</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {\n    Drawer, List, ListItem, ListItemText,\n    Divider\n} from '@material-ui/core';\n\nimport logo4 from \"@logo/TEDxHanyangU4.png\"\n\nconst MenuList = [\n    {\n        key: \"about\",\n        name: \"About Us\",\n        path: \"/about\"\n    }\n];\n\n\n\nconst LeftMenu = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, cur_page, history } = props;\n\n    const closeDrawer = () => {\n        dispatch(toggleDrawer(false))\n    };\n\n    const goPage = (event) => {\n        dispatch(toggleDrawer(false))\n        history.push(event.currentTarget.getAttribute(\"path\"))\n    };\n\n    return (\n        <Drawer id=\"drawer\" anchor=\"left\" open={menuSwitch} onClose={closeDrawer}>\n            <List className=\"menuList\">\n                <ListItem className=\"logo4\">\n                    <img src={logo4} alt=\"logo-img\"></img>\n                </ListItem>\n                <Divider style={{marginTop: 20}}></Divider>\n                {MenuList.map((menu) => (\n                    <ListItem\n                        key={menu.key}\n                        path={menu.path}\n                        button={true}\n                        className={menu.key === cur_page ? \"menu cur_page\": \"menu\"}\n                        onClick={goPage}\n                    >\n                        <ListItemText \n                            disableTypography={true}\n                            primary={menu.name}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch,\n    cur_page: state.cur_page\n}))(withRouter(LeftMenu));\n","import React, {Fragment, useEffect} from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurPage } from '@store/action'\n\nimport Header from \"@components/common/Header\"\nimport Footer from \"@components/common/Footer\"\nimport LeftMenu from \"@components/common/LeftMenu\"\n\nconst Container = (props) => {\n    const dispatch = useDispatch();\n    const { children, cur_page } = props;\n\n    useEffect(() => {\n        dispatch(setCurPage(cur_page));\n    }, [cur_page])\n  \n    return (\n        <Fragment>\n            <Header />\n            <LeftMenu />\n            {children}\n            <Footer />\n        </Fragment>\n    );\n}\n\nexport default Container;\n","import React, {useEffect}from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport TEDxHanyangU8 from \"@logo/TEDxHanyangU8.png\"\nimport IconButton from '@material-ui/core/IconButton';\nimport {LinkedIn, GitHub, Instagram, Facebook} from '@material-ui/icons';\n\nconst email = \"94wogus@gmail.com\"\nconst workEmail = \"94wogus@quantit.io\"\n\nconst snsList = [\n    {  \n        name: \"Facebook\",\n        url: \"https://www.facebook.com/TEDxHanyangU\",\n        icon: <LinkedIn className=\"icon\"/>\n    },\n    {\n        name: \"Instagram\",\n        url: \"https://www.instagram.com/jaehyunback/?hl=ko\",\n        icon: <Instagram className=\"icon\"/>\n    },\n    {\n        name: \"Instagram\",\n        url: \"https://www.instagram.com/jaehyunback/?hl=ko\",\n        icon: <Instagram className=\"icon\"/>\n    },\n]\n\nconst Profile = (props) => {\n    const goSns = (e) => {\n        window.open(e.currentTarget.getAttribute(\"path\"), '_blank');\n    } \n\n    return (\n        <div className=\"mainCard\">\n            <div className=\"cardImg\">\n                <img  src={TEDxHanyangU8} alt=\"mainCardImg\"/>\n            </div>\n            {/* <div className=\"profile\">\n                <div>\n                    <span>JaeHyun.Back</span> / Developer(Quantit)\n                </div>\n                <div>\n                    email: <a href={`mailto:${email}`} title=\"개인 이메일\">{email}</a>\n                </div>\n                <div>\n                    work-email: <a href={`mailto:${workEmail}`} title=\"업무용 이메일\">{workEmail}</a>\n                </div>\n                <div className=\"snsList\">\n                    {snsList.map((sns) => (\n                        <IconButton\n                            key={sns.name}\n                            onClick={goSns}\n                            path={sns.url}\n                        >\n                            {sns.icon}\n                        </IconButton>\n                    ))\n                    }\n                </div> */}\n            {/* </div> */}\n        </div>\n    );\n};\n\nexport default withRouter(Profile);\n","import Home from '@views/Home';\nimport About from '@views/About';\n\nconst routes = [\n    {\n        name: 'main',\n        path: '/',\n        component: Home,\n    },\n    {\n        name: 'about',\n        path: '/about',\n        component: About\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport Container from \"@components/common/Container\"\nimport TedxCard from \"@components/Home/TedxCard\"\n\nconst Home = (props) => {\n    return (\n        <Container cur_page={\"home\"}>\n            <div id=\"home\" className=\"main\">\n                <TedxCard />\n            </div>\n        </Container>\n    )\n}\nexport default withRouter(Home);\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport Container from \"@components/common/Container\"\n\nconst About = (props) => {\n    return (\n        <Container cur_page={\"about\"}>\n            <div id=\"about\" className=\"main\">\n                <div>About</div>\n            </div>\n        </Container>\n    )\n}\nexport default withRouter(About);\n","export default {\n    // ============ 0.Common ============ //\n    cur_page: \"\",\n\n    // ============ 1.Home ============ //\n    menuSwitch: false\n}\n","import {applyMiddleware, createStore} from \"redux\"\nimport promiseMiddleware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer\"\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    reduxThunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer)\nwindow.store = store\n\nexport default store\n","import Constant from \"./constant\"\nimport initialState from \"./state\"\n\nexport default function rootReducer(state=initialState, action){\n    switch(action.type){\n        //  ============== 0. Common ==============  //\n        case Constant.SET_CUR_PAGE:\n            return Object.assign({}, state, {\n                cur_page: action.payload\n            })\n        //  ============== 1. Home ==============  //\n        case Constant.TOGGLE_DRAWER:\n            return Object.assign({}, state, {\n                menuSwitch: action.payload\n            })\n        default:\n            return state;\n    }\n}\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from \"react-redux\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport routes from '@/router';\nimport store from '@/store';\n\nimport '@assets/style/common.css';\nimport '@assets/style/desktop.scss';\n\nconst App = () => {\n    const history = createBrowserHistory();\n\n    return (\n        <Fragment>\n            <Router history={history}>\n                <Switch>\n                {routes.map((r) => (\n                    <Route key={r.path} path={r.path} component={r.component} exact/>\n                ))}\n                </Switch>\n            </Router>\n        </Fragment>\n    )\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}