{"version":3,"sources":["assets/logo/TEDxHanyangU8.png","assets/logo/TEDxHanyangU2.png","assets/logo/TEDxHanyangU4.png","serviceWorker.js","store/constant.js","store/action.js","components/common/Container.js","components/Home/Sns.js","components/Home/TedxCard.js","components/Home/About.js","router.js","views/Home.js","views/Talks.js","store/state.js","store/index.js","store/reducer.js","components/common/HeaderMenu.js","components/common/Header.js","components/common/LeftMenu.js","components/common/Footer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","toggleDrawer","bol","type","Constant","payload","Container","props","dispatch","useDispatch","children","cur_page","useEffect","snsList","name","url","icon","Facebook","className","Instagram","YouTube","Sns","_className","goSns","e","open","currentTarget","getAttribute","map","sns","IconButton","key","onClick","withRouter","src","TEDxHanyangU8","alt","main","title","date","href","map_link","target","rel","place","About","align","Divider","orientation","routes","path","label","Component","id","TedxCard","menuSwitch","store","applyMiddleware","promiseMiddleware","reduxThunk","createStore","createStoreWithMiddleware","state","initialState","action","Object","assign","connect","history","goPage","event","push","r","Button","useDrawer","pathname","logo2","MenuOpen","Menu","Drawer","anchor","onClose","List","ListItem","logo4","style","marginTop","button","ListItemText","disableTypography","primary","Footer","App","createBrowserHistory","useState","setUseDrawer","handleResize","innerWidth","addEventListener","exact","CSSTransition","in","timeout","classNames","unmountOnExit","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mZAAAA,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,yMCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBS,MAEG,eAFH,EAGI,gBCMZ,SAASC,EAAaC,GACzB,MAAO,CACHC,KAAMC,EACNC,QAASH,GCPjB,IAeeI,EAfG,SAACC,GACf,IAAMC,EAAWC,cACTC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAMlB,OAJAC,qBAAU,WACNJ,EDPG,CACHL,KAAMC,EACNC,QCKoBM,MACrB,CAACA,EAAUH,IAGV,kBAAC,WAAD,KACKE,I,qDCXPG,EAAU,CACZ,CACIC,KAAM,WACNC,IAAK,wCACLC,KAAM,kBAACC,EAAA,EAAD,CAAUC,UAAU,UAE9B,CACIJ,KAAM,YACNC,IAAK,8CACLC,KAAM,kBAACG,EAAA,EAAD,CAAWD,UAAU,UAE/B,CACIJ,KAAM,UACNC,IAAK,oEACLC,KAAM,kBAACI,EAAA,EAAD,CAASF,UAAU,WAyBlBG,EArBH,SAACd,GAAW,IACbe,EAAcf,EAAde,WACDC,EAAQ,SAACC,GACX3B,OAAO4B,KAAKD,EAAEE,cAAcC,aAAa,OAAQ,WAGrD,OACI,yBAAKT,UAAWI,GACfT,EAAQe,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CACIC,IAAKF,EAAIf,KACTkB,QAAST,EACTR,IAAKc,EAAId,KAERc,EAAIb,W,QCdNiB,eAfC,SAAC1B,GACb,OACI,yBAAKW,UAAU,YACX,yBAAMgB,IAAKC,IAAeC,IAAI,gBAC9B,yBAAKlB,UAAU,QACX,0BAAMA,UAAU,SAAhB,UAAgCmB,EAAKC,OACrC,0BAAMpB,UAAU,UAAhB,0BACA,0BAAMA,UAAU,QAAQmB,EAAKE,MAC7B,0BAAMrB,UAAU,UAAhB,UAAgC,uBAAGsB,KAAMH,EAAKI,SAAUC,OAAO,SAASC,IAAI,uBAAsB,0BAAMzB,UAAU,SAASmB,EAAKO,SAChI,kBAAC,EAAD,CAAKtB,WAAY,qB,SCqDlBuB,EAjED,SAACtC,GACX,OACI,yBAAKW,UAAU,SACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WACX,uBAAG4B,MAAM,SAAT,SAAuB,0BAAM5B,UAAU,OAAhB,UAE3B,kBAAC6B,EAAA,EAAD,CAASC,YAAY,aACrB,yBAAK9B,UAAU,QACX,yBAAKA,UAAU,QACX,2BAAG,qCAAH,UAAqB,4CAArB,KAA8C,+CAA9C,KAA0E,wCAA1E,8IACA,2BAAG,wDAAH,sLACA,uBAAGA,UAAU,cAAa,sCAA1B,UAA6C,qCAA7C,UAA+D,0GAA/D,oHACA,2BAAG,yIAAH,iFAEJ,yBAAKA,UAAU,QACX,yNACA,uBAAGA,UAAU,cAAb,mIAIZ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WACX,uBAAG4B,MAAM,SAAT,SACU,0BAAM5B,UAAU,OAAhB,SADV,aAKJ,kBAAC6B,EAAA,EAAD,CAASC,YAAY,aACrB,yBAAK9B,UAAU,QACX,yBAAKA,UAAU,QACX,2BAAG,8CAAH,+EAA4C,iEAA5C,6YACA,uBAAGA,UAAU,cAAb,oRAAoF,8CAApF,UAA+G,kFAA/G,qJACA,2BAAG,yDAAH,6FAEJ,yBAAKA,UAAU,QACX,gRACA,uBAAGA,UAAU,cAAb,iOAIZ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,WACX,uBAAG4B,MAAM,SAAT,cACe,0BAAM5B,UAAU,OAAhB,WAGnB,kBAAC6B,EAAA,EAAD,CAASC,YAAY,aACrB,yBAAK9B,UAAU,QACX,yBAAKA,UAAU,QACX,2BAAG,8DAAH,6FACA,oGAA4B,gIAA5B,UAA8D,8EAA9D,2CAEJ,yBAAKA,UAAU,QACX,kGACA,iJAEJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CAAKI,WAAY,mBC5C1B2B,EAfA,CACX,CACInC,KAAM,OACNoC,KAAM,IACNC,MAAO,OACPC,UCSOnB,aAVF,SAAC1B,GACV,OACI,kBAAC,EAAD,CAAWI,SAAU,QACjB,yBAAK0C,GAAG,OAAOnC,UAAU,QACrB,kBAACoC,EAAD,MACA,kBAAC,EAAD,YDFZ,CACIxC,KAAM,QACNoC,KAAM,SACNC,MAAO,QACPC,UEAOnB,aATD,SAAC1B,GACX,OACI,kBAAC,EAAD,CAAWI,SAAU,SACjB,yBAAK0C,GAAG,QAAQnC,UAAU,QACtB,6C,iCCTD,GAEXP,SAAU,GAGV4C,YAAY,GCChB,IAKMC,EAL4BC,YAC9BC,IACAC,IAF8BF,CAGhCG,IAEYC,ECRC,WAAiD,IAA5BC,EAA2B,uDAArBC,EAAcC,EAAO,uCAC3D,OAAOA,EAAO7D,MAEV,KAAKC,EACD,OAAO6D,OAAOC,OAAO,GAAIJ,EAAO,CAC5BnD,SAAUqD,EAAO3D,UAGzB,KAAKD,EACD,OAAO6D,OAAOC,OAAO,GAAIJ,EAAO,CAC5BP,WAAYS,EAAO3D,UAE3B,QACI,OAAOyD,MDJnBjE,OAAO2D,MAAQA,EAEAA,Q,4CEeAW,eAAQ,SAAAL,GAAK,MAAK,CAC7BnD,SAAUmD,EAAMnD,YADLwD,CAEXlC,aAxBe,SAAC1B,GAAW,IACnBI,EAAsBJ,EAAtBI,SAAUyD,EAAY7D,EAAZ6D,QACZC,EAAS,SAACC,GACZF,EAAQG,KAAKD,EAAM5C,cAAcC,aAAa,UAGlD,OACI,yBAAKT,UAAU,eACd+B,EAAOrB,KAAI,SAAC4C,GAAD,OACR,kBAACC,EAAA,EAAD,CACI1C,IAAKyC,EAAE1D,KACPoC,KAAMsB,EAAEtB,KACRhC,UAAWsD,EAAE1D,OAASH,EAAW,gBAAiB,OAClDqB,QAASqC,GAERG,EAAErB,eCiBJgB,eAAQ,SAAAL,GAAK,MAAK,CAC7BP,WAAYO,EAAMP,cADPY,CAEXlC,aA9BW,SAAC1B,GACZ,IAAMC,EAAWC,cACT8C,EAAkChD,EAAlCgD,WAAYa,EAAsB7D,EAAtB6D,QAASM,EAAanE,EAAbmE,UAY7B,OACI,yBAAKrB,GAAG,UACJ,kBAACoB,EAAA,EAAD,CAAQvD,UAAU,WAAWc,QAZtB,WACuB,MAA9BoC,EAAQtE,SAAS6E,UACjBP,EAAQG,KAAK,OAWT,yBAAKrC,IAAK0C,IAAOxC,IAAI,cAExBsC,EACG,kBAACD,EAAA,EAAD,CAAQzC,QAVD,WACfxB,EAASP,GAAa,MAUTsD,EAAa,kBAACsB,EAAA,EAAD,MAAe,kBAACC,EAAA,EAAD,OAEnC,kBAAC,EAAD,W,qDCoBCX,eAAQ,SAAAL,GAAK,MAAK,CAC7BP,WAAYO,EAAMP,WAClB5C,SAAUmD,EAAMnD,YAFLwD,CAGXlC,aA1Ca,SAAC1B,GACd,IAAMC,EAAWC,cACT8C,EAAkChD,EAAlCgD,WAAY5C,EAAsBJ,EAAtBI,SAAUyD,EAAY7D,EAAZ6D,QAMxBC,EAAS,SAACC,GACZ9D,EAASP,GAAa,IACtBmE,EAAQG,KAAKD,EAAM5C,cAAcC,aAAa,UAGlD,OACI,kBAACoD,EAAA,EAAD,CAAQ1B,GAAG,SAAS2B,OAAO,OAAOvD,KAAM8B,EAAY0B,QAVpC,WAChBzE,EAASP,GAAa,MAUlB,kBAACiF,EAAA,EAAD,CAAMhE,UAAU,aACZ,kBAACiE,EAAA,EAAD,CAAUjE,UAAU,SAChB,yBAAKgB,IAAKkD,IAAOhD,IAAI,cAEzB,kBAACW,EAAA,EAAD,CAASsC,MAAO,CAACC,UAAW,MAC3BrC,EAAOrB,KAAI,SAAC4C,GAAD,OACR,kBAACW,EAAA,EAAD,CACIpD,IAAKyC,EAAE1D,KACPoC,KAAMsB,EAAEtB,KACRqC,QAAQ,EACRrE,UAAWsD,EAAE1D,OAASH,EAAW,gBAAiB,OAClDqB,QAASqC,GAET,kBAACmB,EAAA,EAAD,CACIC,mBAAmB,EACnBC,QAASlB,EAAErB,kBC5BxBwC,EAfA,WAEX,OACI,yBAAKtC,GAAG,UACJ,yBAAKnC,UAAU,WACX,iFACA,uPAEJ,yBAAKA,UAAU,WACX,sFCSV0E,G,YAAM,WACR,IAAMxB,EAAUyB,cADF,EAEoBC,oBAAS,GAF7B,mBAEPpB,EAFO,KAEIqB,EAFJ,KAgBd,OAZAnF,qBAAU,WACN,SAASoF,IACFnG,OAAOoG,WAAa,KACnBF,GAAa,GAEbA,GAAa,GAGrBlG,OAAOqG,iBAAiB,SAAUF,GAClCA,OAIA,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAe5B,QAASA,GACpB,kBAAC,EAAD,CAAQM,UAAWA,IAClBA,EAAW,kBAAC,EAAD,MAAc,kBAAC,WAAD,MAC1B,yBAAKxD,UAAU,QACd+B,EAAOrB,KAAI,gBAAEd,EAAF,EAAEA,KAAMoC,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAd,OACR,kBAAC,IAAD,CAAO+C,OAAK,EAACpE,IAAKjB,EAAMoC,KAAMA,IAC7B,gBAAGlD,EAAH,EAAGA,MAAH,OACG,kBAACoG,EAAA,EAAD,CACIC,GAAa,MAATrG,EACJsG,QAAS,IACTC,WAAW,OACXC,eAAa,GAGb,kBAACpD,EAAD,cAMZ,kBAAC,EAAD,UAMhBqD,IAASC,OACL,kBAAC,IAAD,CAAUlD,MAAOA,GACb,kBAAC,EAAD,OAEJmD,SAASC,eAAe,SjB+DtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.82e36f1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU8.5ed35f25.png\";","module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU2.272df90a.png\";","module.exports = __webpack_public_path__ + \"static/media/TEDxHanyangU4.adcef4d2.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    //  ============== 0. Common ==============  //\n    SET_CUR_PAGE: \"SET_CUR_PAGE\",\n    TOGGLE_DRAWER: \"TOGGLE_DRAWER\"\n    //  ============== 1. Home ==============  //\n};\n","import Constant from \"./constant\"\n\nexport function setCurPage(key) {\n    return {\n        type: Constant.SET_CUR_PAGE,\n        payload: key,\n    };\n}\n\nexport function toggleDrawer(bol) {\n    return {\n        type: Constant.TOGGLE_DRAWER,\n        payload: bol,\n    };\n}","import React, {useEffect, Fragment} from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurPage } from '@store/action'\n\nconst Container = (props) => {\n    const dispatch = useDispatch();\n    const { children, cur_page } = props;\n\n    useEffect(() => {\n        dispatch(setCurPage(cur_page));\n    }, [cur_page, dispatch])\n  \n    return (\n        <Fragment>\n            {children}\n        </Fragment>\n    );\n}\n\nexport default Container;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Instagram, Facebook, YouTube} from '@material-ui/icons';\n\nconst snsList = [\n    {  \n        name: \"facebook\",\n        url: \"https://www.facebook.com/TEDxHanyangU\",\n        icon: <Facebook className=\"icon\"/>\n    },\n    {\n        name: \"instagram\",\n        url: \"https://www.instagram.com/tedxhanyangu_2021\",\n        icon: <Instagram className=\"icon\"/>\n    },\n    {\n        name: \"youtube\",\n        url: \"https://www.youtube.com/channel/UCvOYpIsR8nDXfB9nZSp871w/featured\",\n        icon: <YouTube className=\"icon\"/>\n    },\n]\n\nconst Sns = (props) => {\n    const {_className} = props\n    const goSns = (e) => {\n        window.open(e.currentTarget.getAttribute(\"url\"), '_blank');\n    }\n\n    return(\n        <div className={_className}>\n        {snsList.map((sns) => (\n            <IconButton\n                key={sns.name}\n                onClick={goSns}\n                url={sns.url}\n            >\n                {sns.icon}\n            </IconButton>\n        ))}\n        </div>\n    )\n}\n\nexport default Sns;","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport TEDxHanyangU8 from \"@logo/TEDxHanyangU8.png\"\nimport Sns from \"@components/Home/Sns\"\nimport main from \"@data/main\"\n\nconst Profile = (props) => {\n    return (\n        <div className=\"cardWrap\">\n            <img  src={TEDxHanyangU8} alt=\"mainCardImg\"/>\n            <div className=\"text\">\n                <span className=\"title\">Theme: {main.title}</span>\n                <span className=\"italic\">This event occurred on</span> \n                <span className=\"date\">{main.date}</span>\n                <span className=\"italic\">and in <a href={main.map_link} target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"place\">{main.place}</span></a></span>\n                <Sns _className={\"profile-sns\"}/>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Profile);\n","import React from 'react';\nimport { Divider } from '@material-ui/core';\nimport Sns from \"@components/Home/Sns\"\n\nconst About = (props) => {\n    return (\n        <div className=\"about\">\n            <div className=\"content\">\n                <div className=\"subject\">\n                    <p align=\"right\">About <span className=\"red\">Tedx</span></p>\n                </div>\n                <Divider orientation=\"vertical\"></Divider>\n                <div className=\"text\">\n                    <div className=\"wrap\">\n                        <p><span>TED</span>는 <span>Technology</span>, <span>Entertainment</span>, <span>Design</span>의 약자로, TED는 자신이 하는 일에 열정을 가진 사람들이</p>\n                        <p><span>Ideas Worth Spreading'</span>이라는 슬로건 아래에서 18분간 발표하고 이야기를 나누는 자리입니다.</p>\n                        <p className=\"top-margin\"><span>TEDx</span>의 <span>'x'</span>는 <span>독립적으로 조직된 TED 이벤트</span>를 뜻하며, TED의 기본 가이드라인을 활용하여,</p>\n                        <p><span>자발적으로 TED를 기획하고자 하는 사람들</span>이 모여 만드는 이벤트입니다.</p>\n                    </div>\n                    <div className=\"wrap\">\n                        <p>TED, short for Technology, Entertainment, Design, is a conference where speakers with passion for their work presents their ideas under the slogan 'Ideas Worth Spreading' for 18 minutes.</p>\n                        <p className=\"top-margin\">The 'x' in TEDx represents the idea of an independent TED-like event organized by individuals under TED specific guidelines.</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"content\">\n                <div className=\"subject\">\n                    <p align=\"right\">\n                        About <span className=\"red\">Tedx </span> \n                        HanyangU\n                    </p>\n                </div>\n                <Divider orientation=\"vertical\"></Divider>\n                <div className=\"text\">\n                    <div className=\"wrap\">\n                        <p><span>TEDxHanyangU</span>는 한양대학교의 교육 이념인 <span>사랑의 실천</span>을 바탕으로, 다양한 학문의 지식을 통해 폭넓은 교육을 받은 근면정직한 교양인으로 성장하는 데 보탬이 되는 아이디어 공유의 장을 펼치고자 노력합니다.</p>\n                        <p className=\"top-margin\">학문적 이론에 집중하는 교양인을 넘어서, 생각하고 배운 바를 실천에 옮기는 실천적 교양인이 되고자 하는 <span>TEDxHanyangU</span>는 <span>교수학습개발센터</span>의 지원을 받아 다양한 아이디어를 가진 학우들과 학내에</p>\n                        <p><span>'Ideas Worth Spreading'</span>이라는 가치를 실현하고 있습니다.</p>\n                    </div>\n                    <div className=\"wrap\">\n                        <p>TEDxHanyangU was organized based on Hanyang University's ideals of education, Love in Action, to create a conference for sharing ideas that will help students grow into dilligent and honest beings through widening their academic persective. </p>\n                        <p className=\"top-margin\">With support from 'The Center for Teaching & Learning', TEDxHanyangU hopes to celebrate 'Ideas Worth Spreading' and encourage fellow students to not only focus on academia but use knowledge for the good of the society.</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"content\">\n                <div className=\"subject\">\n                    <p align=\"right\">\n                        Contact our<span className=\"red\"> Team</span>\n                    </p>\n                </div>\n                <Divider orientation=\"vertical\"></Divider>\n                <div className=\"text\">\n                    <div className=\"wrap\">\n                        <p><span>Facebook, Instagram, Youtube</span>에서도 TEDxHanyangU를 만나볼 수 있습니다.</p>\n                        <p>각 채널에 방문하여 TEDxHanyangU의 <span>새로운 소식 및 연사님들의 카드뉴스</span>와 <span>이전 이벤트 영상</span>을 확인하세요.</p>\n                    </div>\n                    <div className=\"wrap\">\n                        <p>You can also meet TEDxHanyangU on Facebook, Instagram, and Youtube.</p>\n                        <p>Visit each channel to see what's new from TEDxHanyangU, the speakers' card news, and videos from previous events.</p>\n                    </div>\n                    <div className=\"wrap\">\n                        <Sns _className={\"about-sns\"}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default About;\n","import Home from '@views/Home';\nimport Talks from '@views/Talks';\n\nconst routes = [\n    {\n        name: 'home',\n        path: '/',\n        label: \"Home\",\n        Component: Home,\n    },\n    {\n        name: 'talks',\n        path: '/talks',\n        label: 'Talks',\n        Component: Talks\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport Container from \"@components/common/Container\"\nimport TedxCard from \"@components/Home/TedxCard\"\nimport About from \"@components/Home/About\"\n\nconst Home = (props) => {\n    return (\n        <Container cur_page={\"home\"}>\n            <div id=\"home\" className=\"page\">\n                <TedxCard />\n                <About />\n            </div>\n        </Container>\n    )\n}\nexport default withRouter(Home);\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\"\n\nimport Container from \"@components/common/Container\"\n\nconst Talks = (props) => {\n    return (\n        <Container cur_page={\"talks\"}>\n            <div id=\"talks\" className=\"page\">\n                <div>Talks</div>\n            </div>\n        </Container>\n    )\n}\nexport default withRouter(Talks);\n","export default {\n    // ============ 0.Common ============ //\n    cur_page: \"\",\n\n    // ============ 1.Home ============ //\n    menuSwitch: false\n}\n","import {applyMiddleware, createStore} from \"redux\"\nimport promiseMiddleware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducer\"\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    reduxThunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer)\nwindow.store = store\n\nexport default store\n","import Constant from \"./constant\"\nimport initialState from \"./state\"\n\nexport default function rootReducer(state=initialState, action){\n    switch(action.type){\n        //  ============== 0. Common ==============  //\n        case Constant.SET_CUR_PAGE:\n            return Object.assign({}, state, {\n                cur_page: action.payload\n            })\n        //  ============== 1. Home ==============  //\n        case Constant.TOGGLE_DRAWER:\n            return Object.assign({}, state, {\n                menuSwitch: action.payload\n            })\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport routes from '@/router';\n\nimport Button from '@material-ui/core/Button';\n\nconst HeaderMenu = (props) => {\n    const { cur_page, history } = props;\n    const goPage = (event) => {\n        history.push(event.currentTarget.getAttribute(\"path\"))\n    };\n\n    return (\n        <div className=\"header-menu\">\n        {routes.map((r) => (\n            <Button\n                key={r.name}\n                path={r.path}\n                className={r.name === cur_page ? \"menu cur_page\": \"menu\"}\n                onClick={goPage}\n            >\n                {r.label}\n            </Button>\n        ))}\n        </div>\n    );\n};\n\nexport default connect(state => ({\n    cur_page: state.cur_page\n}))(withRouter(HeaderMenu));\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\nimport { toggleDrawer } from '@store/action'\n\nimport {Button} from '@material-ui/core';\nimport {Menu, MenuOpen} from '@material-ui/icons';\n\nimport logo2 from \"@logo/TEDxHanyangU2.png\"\nimport HeaderMenu from \"@components/common/HeaderMenu\"\n\nconst Header = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, history, useDrawer} = props;\n\n    const goHome = () => {\n        if (history.location.pathname !== \"/\" ){\n            history.push('/')\n        }\n    }\n\n    const openDrawer = () => {\n        dispatch(toggleDrawer(true))\n    };\n\n    return (\n        <div id=\"header\">\n            <Button className=\"logoWarp\" onClick={goHome}>\n                <img src={logo2} alt=\"logo-img\"></img>\n            </Button>\n            {useDrawer? \n                <Button onClick={openDrawer}>\n                    {menuSwitch ? <MenuOpen /> : <Menu/>}\n                </Button>\n            : <HeaderMenu />}\n        </div>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch\n}))(withRouter(Header));\n","import React from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport {withRouter} from \"react-router-dom\"\n\nimport {\n    Drawer, List, ListItem, ListItemText,\n    Divider\n} from '@material-ui/core';\n\nimport routes from '@/router';\nimport { toggleDrawer } from '@store/action'\nimport logo4 from \"@logo/TEDxHanyangU4.png\"\n\n\n\nconst LeftMenu = (props) => {\n    const dispatch = useDispatch();\n    const { menuSwitch, cur_page, history } = props;\n\n    const closeDrawer = () => {\n        dispatch(toggleDrawer(false))\n    };\n\n    const goPage = (event) => {\n        dispatch(toggleDrawer(false))\n        history.push(event.currentTarget.getAttribute(\"path\"))\n    };\n\n    return (\n        <Drawer id=\"drawer\" anchor=\"left\" open={menuSwitch} onClose={closeDrawer}>\n            <List className=\"menu-list\">\n                <ListItem className=\"logo4\">\n                    <img src={logo4} alt=\"logo-img\"></img>\n                </ListItem>\n                <Divider style={{marginTop: 20}}></Divider>\n                {routes.map((r) => (\n                    <ListItem\n                        key={r.name}\n                        path={r.path}\n                        button={true}\n                        className={r.name === cur_page ? \"menu cur_page\": \"menu\"}\n                        onClick={goPage}\n                    >\n                        <ListItemText \n                            disableTypography={true}\n                            primary={r.label}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n};\n\nexport default connect(state => ({\n    menuSwitch: state.menuSwitch,\n    cur_page: state.cur_page\n}))(withRouter(LeftMenu));\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <div id=\"footer\">\n            <div className=\"content\">\n                <span>18회 디렉터: 정다윤</span>\n                <span>주소: 서울특별시 성동구 왕십리로 222 (사근동,한양대학교) 스마트교수학습센터 TEDxHanyangU</span>\n            </div>\n            <div className=\"content\">\n                <span>Copyright © TEDxHanyangU. All Rights Reserved.</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, {Fragment, useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route} from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group'\nimport { createBrowserHistory } from 'history';\nimport { Provider } from \"react-redux\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport routes from '@/router';\nimport store from '@/store';\n\nimport Header from \"@components/common/Header\"\nimport LeftMenu from \"@components/common/LeftMenu\"\nimport Footer from \"@components/common/Footer\"\n\n\nimport '@assets/style/common.css';\nimport '@assets/style/desktop.scss';\n\nconst App = () => {\n    const history = createBrowserHistory();\n    const [useDrawer, setUseDrawer] = useState(false)\n\n    useEffect(() => {\n        function handleResize() {\n            if(window.innerWidth > 1024){\n                setUseDrawer(false)\n            }else{\n                setUseDrawer(true)\n            }\n        }\n        window.addEventListener('resize', handleResize)\n        handleResize()\n    })\n\n    return (\n        <Fragment>\n            <BrowserRouter history={history}>\n                <Header useDrawer={useDrawer}/>\n                {useDrawer? <LeftMenu />: <Fragment />}\n                <div className=\"main\">\n                {routes.map(({name, path, Component}) => (\n                    <Route exact key={name} path={path}>\n                    {({ match }) => (\n                        <CSSTransition\n                            in={match != null}\n                            timeout={300}\n                            classNames=\"page\"\n                            unmountOnExit\n                        >\n                            \n                            <Component />\n                        </CSSTransition>\n                    )}\n                    </Route>\n                ))}\n                </div>\n                <Footer/>\n            </BrowserRouter>\n        </Fragment>\n    )\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}